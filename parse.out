#
![site
logo](https://cdn.sstatic.net/Sites/stackoverflow/Img/icon-48.png?v=b7e36f88ff92)
**Join Stack Overflow**
By clicking “Sign up”, you agree to our terms of service and acknowledge you
have read our privacy policy.
Sign up with Google
Sign up with GitHub
# OR
Email
Password
Sign up
Already have an account? Log in
X
Skip to main content
Stack Overflow
  1. About
  2. Products 
  3. OverflowAI
  1. Stack Overflow for Teams Where developers & technologists share private knowledge with coworkers
  2. Advertising & Talent Reach devs & technologists worldwide about your product, service or employer brand
  3. OverflowAI GenAI features for Teams
  4. OverflowAPI Train & fine-tune LLMs
  5. Labs The future of collective knowledge sharing
  6. About the company Visit the blog
Loading…
  1. ###  current community
     * Stack Overflow 
help chat
     * Meta Stack Overflow 
###  your communities
Sign up or log in to customize your list.
### more stack exchange communities
company blog
  2.   3. Log in
  4. Sign up
#
Let's set up your homepage Select a few topics you're interested in:
python javascript c# reactjs java android html flutter c++ node.js typescript
css r php angular next.js spring-boot machine-learning sql excel ios azure
docker
Or search from our full list:
  * javascript
  * python
  * java
  * c#
  * php
  * android
  * html
  * jquery
  * c++
  * css
  * ios
  * sql
  * mysql
  * r
  * reactjs
  * node.js
  * arrays
  * c
  * asp.net
  * json
  * python-3.x
  * .net
  * ruby-on-rails
  * sql-server
  * swift
  * django
  * angular
  * objective-c
  * excel
  * pandas
  * angularjs
  * regex
  * typescript
  * ruby
  * linux
  * ajax
  * iphone
  * vba
  * xml
  * laravel
  * spring
  * asp.net-mvc
  * database
  * wordpress
  * string
  * flutter
  * postgresql
  * mongodb
  * wpf
  * windows
  * amazon-web-services
  * xcode
  * bash
  * git
  * oracle-database
  * spring-boot
  * dataframe
  * firebase
  * azure
  * list
  * multithreading
  * vb.net
  * docker
  * react-native
  * eclipse
  * algorithm
  * powershell
  * macos
  * visual-studio
  * numpy
  * image
  * forms
  * scala
  * function
  * vue.js
  * twitter-bootstrap
  * performance
  * selenium
  * winforms
  * kotlin
  * loops
  * express
  * dart
  * hibernate
  * sqlite
  * matlab
  * python-2.7
  * shell
  * rest
  * apache
  * api
  * entity-framework
  * android-studio
  * csv
  * maven
  * linq
  * qt
  * dictionary
  * unit-testing
  * facebook
  * asp.net-core
  * tensorflow
  * apache-spark
  * file
  * swing
  * class
  * unity-game-engine
  * sorting
  * date
  * authentication
  * symfony
  * go
  * opencv
  * t-sql
  * .htaccess
  * matplotlib
  * google-chrome
  * for-loop
  * datetime
  * codeigniter
  * http
  * perl
  * validation
  * sockets
  * google-maps
  * object
  * uitableview
  * xaml
  * oop
  * if-statement
  * visual-studio-code
  * cordova
  * ubuntu
  * web-services
  * email
  * android-layout
  * github
  * elasticsearch
  * spring-mvc
  * kubernetes
  * selenium-webdriver
  * ms-access
  * user-interface
  * parsing
  * ggplot2
  * pointers
  * c++11
  * machine-learning
  * security
  * google-sheets
  * flask
  * ruby-on-rails-3
  * nginx
  * google-apps-script
  * templates
  * variables
  * exception
  * sql-server-2008
  * gradle
  * debugging
  * tkinter
  * listview
  * delphi
  * jpa
  * asynchronous
  * pdf
  * web-scraping
  * jsp
  * haskell
  * ssl
  * amazon-s3
  * google-cloud-platform
  * jenkins
  * xamarin
  * testing
  * wcf
  * npm
  * batch-file
  * generics
  * ionic-framework
  * network-programming
  * unix
  * recursion
  * google-app-engine
  * mongoose
  * visual-studio-2010
  * .net-core
  * android-fragments
  * assembly
  * animation
  * math
  * session
  * next.js
  * hadoop
  * svg
  * intellij-idea
  * curl
  * django-models
  * join
  * laravel-5
  * heroku
  * url
  * winapi
  * http-redirect
  * tomcat
  * rust
  * google-cloud-firestore
  * web
  * inheritance
  * webpack
  * keras
  * image-processing
  * asp.net-mvc-4
  * gcc
  * logging
  * dom
  * matrix
  * pyspark
  * actionscript-3
  * swiftui
  * button
  * post
  * firebase-realtime-database
  * optimization
  * jquery-ui
  * cocoa
  * iis
  * xpath
  * d3.js
  * firefox
  * internet-explorer
  * javafx
  * xslt
  * caching
  * select
  * asp.net-mvc-3
  * opengl
  * events
  * asp.net-web-api
  * plot
  * dplyr
  * magento
  * encryption
  * search
  * stored-procedures
  * amazon-ec2
  * ruby-on-rails-4
  * memory
  * audio
  * canvas
  * multidimensional-array
  * jsf
  * random
  * redux
  * cookies
  * vector
  * facebook-graph-api
  * input
  * flash
  * xamarin.forms
  * arraylist
  * indexing
  * ipad
  * cocoa-touch
  * data-structures
  * video
  * model-view-controller
  * apache-kafka
  * serialization
  * jdbc
  * woocommerce
  * routes
  * razor
  * awk
  * servlets
  * mod-rewrite
  * azure-devops
  * beautifulsoup
  * iframe
  * docker-compose
  * filter
  * excel-formula
  * aws-lambda
  * design-patterns
  * django-rest-framework
  * text
  * visual-c++
  * cakephp
  * mobile
  * android-intent
  * react-hooks
  * struct
  * methods
  * groovy
  * mvvm
  * ssh
  * lambda
  * checkbox
  * ecmascript-6
  * google-chrome-extension
  * time
  * grails
  * installation
  * sharepoint
  * shiny
  * spring-security
  * cmake
  * jakarta-ee
  * android-recyclerview
  * core-data
  * plsql
  * meteor
  * types
  * android-activity
  * sed
  * bootstrap-4
  * websocket
  * activerecord
  * graph
  * replace
  * scikit-learn
  * file-upload
  * group-by
  * vim
  * junit
  * boost
  * deep-learning
  * import
  * sass
  * memory-management
  * error-handling
  * async-await
  * eloquent
  * dynamic
  * soap
  * silverlight
  * charts
  * dependency-injection
  * apache-spark-sql
  * layout
  * deployment
  * browser
  * gridview
  * svn
  * while-loop
  * google-bigquery
  * vuejs2
  * ffmpeg
  * dll
  * highcharts
  * view
  * foreach
  * c#-4.0
  * plugins
  * redis
  * makefile
  * reporting-services
  * jupyter-notebook
  * server
  * merge
  * https
  * unicode
  * reflection
  * google-maps-api-3
  * twitter
  * extjs
  * oauth-2.0
  * axios
  * pytorch
  * terminal
  * pip
  * split
  * mysqli
  * django-views
  * cmd
  * encoding
  * netbeans
  * database-design
  * collections
  * hash
  * automation
  * ember.js
  * data-binding
  * build
  * tcp
  * pdo
  * sqlalchemy
  * apache-flex
  * command-line
  * printing
  * spring-data-jpa
  * entity-framework-core
  * concurrency
  * java-8
  * react-redux
  * jestjs
  * service
  * html-table
  * neo4j
  * ansible
  * lua
  * parameters
  * material-ui
  * visual-studio-2012
  * module
  * enums
  * promise
  * flexbox
  * outlook
  * webview
  * firebase-authentication
  * web-applications
  * uwp
  * jquery-mobile
  * utf-8
  * datatable
  * python-requests
  * drop-down-menu
  * scroll
  * colors
  * parallel-processing
  * hive
  * tfs
  * scipy
  * count
  * syntax
  * ms-word
  * twitter-bootstrap-3
  * ssis
  * google-analytics
  * fonts
  * three.js
  * graphql
  * constructor
  * file-io
  * rxjs
  * paypal
  * powerbi
  * discord
  * cassandra
  * socket.io
  * graphics
  * gwt
  * compiler-errors
  * nlp
  * react-router
  * solr
  * url-rewriting
  * backbone.js
  * datatables
  * memory-leaks
  * datagridview
  * oauth
  * oracle11g
  * drupal
  * zend-framework
  * neural-network
  * terraform
  * knockout.js
  * django-forms
  * interface
  * triggers
  * google-api
  * casting
  * angular-material
  * linked-list
  * jmeter
  * proxy
  * path
  * timer
  * django-templates
  * directory
  * orm
  * parse-platform
  * visual-studio-2015
  * arduino
  * cron
  * windows-phone-7
  * push-notification
  * conditional-statements
  * primefaces
  * functional-programming
  * pagination
  * model
  * jar
  * xamarin.android
  * hyperlink
  * uiview
  * visual-studio-2013
  * vbscript
  * gitlab
  * google-cloud-functions
  * azure-active-directory
  * download
  * jwt
  * swift3
  * sql-server-2005
  * process
  * configuration
  * rspec
  * properties
  * callback
  * pygame
  * combobox
  * windows-phone-8
  * safari
  * permissions
  * linux-kernel
  * scrapy
  * raspberry-pi
  * scripting
  * emacs
  * clojure
  * scope
  * io
  * x86
  * mongodb-query
  * compilation
  * angularjs-directive
  * nhibernate
  * responsive-design
  * request
  * bluetooth
  * dns
  * 3d
  * binding
  * reference
  * discord.js
  * architecture
  * playframework
  * version-control
  * pyqt
  * doctrine-orm
  * expo
  * package
  * azure-functions
  * pycharm
  * get
  * sql-server-2012
  * rubygems
  * f#
  * autocomplete
  * datepicker
  * openssl
  * kendo-ui
  * tree
  * jackson
  * controller
  * yii
  * xamarin.ios
  * grep
  * nested
  * static
  * statistics
  * datagrid
  * dockerfile
  * active-directory
  * transactions
  * null
  * uiviewcontroller
  * phpmyadmin
  * webforms
  * discord.py
  * notifications
  * sas
  * computer-vision
  * duplicates
  * youtube
  * mocking
  * nullpointerexception
  * menu
  * yaml
  * bitmap
  * sum
  * asp.net-mvc-5
  * electron
  * visual-studio-2008
  * jsf-2
  * yii2
  * time-series
  * android-listview
  * stl
  * stream
  * css-selectors
  * floating-point
  * ant
  * cryptography
  * character-encoding
  * hashmap
  * blazor
  * sdk
  * msbuild
  * selenium-chromedriver
  * google-drive-api
  * jboss
  * asp.net-core-mvc
  * frontend
  * joomla
  * devise
  * anaconda
  * navigation
  * cors
  * background
  * camera
  * binary
  * pyqt5
  * multiprocessing
  * linq-to-sql
  * cuda
  * iterator
  * onclick
  * ios7
  * mariadb
  * plotly
  * rabbitmq
  * android-asynctask
  * laravel-4
  * tabs
  * insert
  * uicollectionview
  * amazon-dynamodb
  * environment-variables
  * microsoft-graph-api
  * linker
  * android-jetpack-compose
  * console
  * xsd
  * upload
  * coldfusion
  * ftp
  * continuous-integration
  * textview
  * opengl-es
  * operating-system
  * localization
  * xml-parsing
  * mockito
  * formatting
  * macros
  * kivy
  * json.net
  * vuejs3
  * type-conversion
  * data.table
  * timestamp
  * calendar
  * integer
  * segmentation-fault
  * android-ndk
  * drag-and-drop
  * prolog
  * char
  * crash
  * jasmine
  * automated-tests
  * dependencies
  * itext
  * android-gradle-plugin
  * header
  * firebase-cloud-messaging
  * geometry
  * sprite-kit
  * mfc
  * fortran
  * nosql
  * attributes
  * nuxt.js
  * format
  * nestjs
  * jquery-plugins
  * odoo
  * db2
  * leaflet
  * jenkins-pipeline
  * event-handling
  * postman
  * flutter-layout
  * azure-pipelines
  * annotations
  * julia
  * keyboard
  * textbox
  * arm
  * visual-studio-2017
  * gulp
  * libgdx
  * xampp
  * synchronization
  * crystal-reports
  * stripe-payments
  * dom-events
  * timezone
  * azure-web-app-service
  * swagger
  * android-emulator
  * sequelize.js
  * wso2
  * uikit
  * uiscrollview
  * aggregation-framework
  * namespaces
  * jvm
  * chart.js
  * com
  * webdriver
  * geolocation
  * centos
  * subprocess
  * google-sheets-formula
  * widget
  * html5-canvas
  * dialog
  * garbage-collection
  * numbers
  * concatenation
  * sql-update
  * mapreduce
  * qml
  * windows-10
  * set
  * ionic2
  * smtp
  * tuples
  * snowflake-cloud-data-platform
  * modal-dialog
  * rotation
  * android-edittext
  * http-headers
  * spring-data
  * doctrine
  * radio-button
  * grid
  * nuget
  * sonarqube
  * java-stream
  * lucene
  * xmlhttprequest
  * internationalization
  * listbox
  * components
  * switch-statement
  * initialization
  * apache-camel
  * google-play
  * boolean
  * serial-port
  * ldap
  * ios5
  * youtube-api
  * return
  * eclipse-plugin
  * pivot
  * latex
  * gdb
  * frameworks
  * tags
  * containers
  * dataset
  * asp-classic
  * foreign-keys
  * subquery
  * label
  * uinavigationcontroller
  * copy
  * delegates
  * google-cloud-storage
  * github-actions
  * struts2
  * migration
  * base64
  * protractor
  * c++17
  * sql-server-2008-r2
  * queue
  * find
  * uibutton
  * arguments
  * composer-php
  * append
  * embedded
  * jaxb
  * zip
  * stack
  * cucumber
  * autolayout
  * ide
  * popup
  * entity-framework-6
  * iteration
  * windows-7
  * r-markdown
  * vb6
  * gmail
  * ssl-certificate
  * airflow
  * jqgrid
  * hover
  * android-viewpager
  * passwords
  * udp
Next You’ll be prompted to create an account to view your personalized
homepage.
X
  1.     1. Home
    2. Questions
    3. Tags
    4.     5. Users
    6. Companies
    7. Labs
    8. Jobs
    9. Discussions
    10. Collectives
    11. Communities for your favorite technologies. Explore all Collectives
  2. Teams
![](https://cdn.sstatic.net/Img/teams/teams-promo.svg?v=e507948b81bf)
Ask questions, find answers and collaborate at work with Stack Overflow for
Teams.
Try Teams for free Explore Teams
  3. Teams
  4. Ask questions, find answers and collaborate at work with Stack Overflow for Teams. Explore Teams
##### Collectives™ on Stack Overflow
Find centralized, trusted content and collaborate around the technologies you
use most.
Learn more about Collectives
**Teams**
Q&A for work
Connect and share knowledge within a single location that is structured and
easy to search.
Learn more about Teams
Get early access and see previews of new features.
Learn more about Labs
# How to remove empty lines with or without whitespace
Ask Question
Asked 14 years, 3 months ago
Modified 1 year, 2 months ago
Viewed 226k times
This question shows research effort; it is useful and clear
52
Save this question.
Show activity on this post.
I have large string which I split by newlines. How can I remove all lines that
are empty, (whitespace only)?
pseudo code:
    for stuff in largestring:
       remove stuff that is blank
  * python
  * string
  * whitespace
Share
Share a link to this question
Copy linkCC BY-SA 4.0
Improve this question
Follow
Follow this question to receive notifications
edited Oct 17, 2023 at 2:24
![Trenton McKinney's user avatar](https://i.sstatic.net/UBA7j.jpg?s=64)
Trenton McKinney
62.1k4141 gold badges163163 silver badges189189 bronze badges
asked Sep 14, 2010 at 18:35
user428370user428370
2
  * 3
For myself, I found the answer here is the best solution
– Dmitriy
Commented Oct 5, 2016 at 6:00
  * 2
One liner to remove empty lines (without whitespace) is this . Question
headline could potentially be changed to 'Remove empty lines with whitespace
only in python'.
– ViFI
Commented Nov 3, 2016 at 6:41
Add a comment  | 
##  12 Answers 12
Sorted by:  Reset to default
Highest score (default)  Trending (recent votes count more)  Date modified
(newest first)  Date created (oldest first)
This answer is useful
73
Save this answer.
Show activity on this post.
Try list comprehension and `string.strip()`:
    >>> mystr = "L1\nL2\n\nL3\nL4\n  \n\nL5"
    >>> mystr.split('\n')
    ['L1', 'L2', '', 'L3', 'L4', '  ', '', 'L5']
    >>> [line for line in mystr.split('\n') if line.strip()]
    ['L1', 'L2', 'L3', 'L4', 'L5']
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
edited May 10, 2023 at 17:06
![Gilles Quénot's user avatar](https://i.sstatic.net/yhE6n.jpg?s=64)
Gilles Quénot
184k4343 gold badges230230 silver badges229229 bronze badges
answered Sep 14, 2010 at 18:45
![gimel's user
avatar](https://www.gravatar.com/avatar/fd7da9bf7b009ceb7a7037906361c9eb?s=64&d=identicon&r=PG)
gimelgimel
86.1k1010 gold badges7979 silver badges104104 bronze badges
1
  * 16
you can shorten it by omitting the != '' simply "if line.strip()"
– WestCoastProjects
Commented Jun 17, 2013 at 21:38
Add a comment  | 
This answer is useful
51
Save this answer.
Show activity on this post.
Using regex:
    if re.match(r'^\s*$', line):
        # line is empty (has only the following: \t\n\r and whitespace)
Using regex + `filter()`:
    filtered = filter(lambda x: not re.match(r'^\s*$', x), original)
As seen on codepad.
Share
Share a link to this answer
Copy linkCC BY-SA 2.5
Improve this answer
Follow
Follow this answer to receive notifications
edited Sep 14, 2010 at 18:48
answered Sep 14, 2010 at 18:38
![NullUserException's user
avatar](https://www.gravatar.com/avatar/16961c15df3fee8c4b3056ff83d1938b?s=64&d=identicon&r=PG)
NullUserExceptionNullUserException
85.4k3030 gold badges211211 silver badges237237 bronze badges
3
  * 2
Thanks for all the results, however, this solution was exactly what I had been
looking for! Thanks a lot
– user428370
Commented Sep 14, 2010 at 19:01
  * 5
gimel's solution, with re-joining the text afterwards, gives a far better
performance. I compared the two solutions on a small text (10 lines if which 3
were blank). Here are the results: regex: `1000 loops, best of 3: 452 us per
loop`; join, split & strip: `100000 loops, best of 3: 5.41 us per loop`
– m01
Commented May 28, 2013 at 8:48
  * Introductory video: Python Tutorial: re Module - How to Write and Match Regular Expressions (Regex) - YouTube
– Ooker
Commented Aug 23, 2019 at 13:28
Add a comment  | 
This answer is useful
26
Save this answer.
Show activity on this post.
I also tried regexp and list solutions, and **list one is faster**.
Here is my solution (by previous answers):
    text = "\n".join([ll.rstrip() for ll in original_text.splitlines() if ll.strip()])
Share
Share a link to this answer
Copy linkCC BY-SA 3.0
Improve this answer
Follow
Follow this answer to receive notifications
answered Jul 12, 2013 at 8:24
![Regisz's user
avatar](https://www.gravatar.com/avatar/be7584b3f598d4fc8ef29824ea819b34?s=64&d=identicon&r=PG)
RegiszRegisz
51999 silver badges1919 bronze badges
0
Add a comment  | 
This answer is useful
13
Save this answer.
Show activity on this post.
    lines = bigstring.split('\n')
    lines = [line for line in lines if line.strip()]
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
edited Jun 23, 2020 at 13:58
answered Sep 14, 2010 at 18:45
![nmichaels's user
avatar](https://www.gravatar.com/avatar/04bbaf6d73be76d81b13f2e150017691?s=64&d=identicon&r=PG)
nmichaelsnmichaels
50.9k1212 gold badges111111 silver badges137137 bronze badges
4
  * 1
That would work for lines = ['Line\n', '\n', 'Line\n'] but the input is
'Line\n\nLine\n' .
– Walter Nissen
Commented Sep 14, 2010 at 18:54
  * 2
@Walter: Actually, if you used 'Line\n\nLine\n'.split() like you should have,
it would work just fine.
– nmichaels
Commented Sep 14, 2010 at 19:42
  * 1
Works for me with `bigstring.split('\n')`
– Hritik
Commented Dec 31, 2018 at 18:18
  * This isn't at all what OP asks for. Try it with "a b c": it returns "a\nb\nc".
– Clément
Commented Jun 22, 2020 at 2:58
Add a comment  | 
This answer is useful
8
Save this answer.
Show activity on this post.
Surprised a multiline re.sub has not been suggested (Oh, because you've
already split your string... But why?):
    >>> import re
    >>> a = "Foo\n \nBar\nBaz\n\n   Garply\n  \n"
    >>> print a
    Foo
    Bar
    Baz
            Garply
    >>> print(re.sub(r'\n\s*\n','\n',a,re.MULTILINE))
    Foo
    Bar
    Baz
            Garply
    >>> 
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
answered May 17, 2018 at 18:45
![mushuweasel's user
avatar](https://www.gravatar.com/avatar/58a2e897c3b0364e2388228c1cb556d0?s=64&d=identicon&r=PG&f=y&so-
version=2)
mushuweaselmushuweasel
78277 silver badges77 bronze badges
1
  * 1
On a multiline sub, \s* will match any number of \n and any other whitespace:
> >>> import re > >>> a = "foo\n \n\t\n \nbar\n\n \n baz" > >>>
print(re.sub(r'\n\s*\n','\n',a,re.MULTILINE)) > foo > bar > baz grumble. I
apparently can't figure out markdown in comments.
– mushuweasel
Commented Aug 13, 2019 at 21:17
Add a comment  | 
This answer is useful
1
Save this answer.
Show activity on this post.
you can simply use rstrip:
        for stuff in largestring:
            print(stuff.rstrip("\n")
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
answered Apr 11, 2019 at 10:27
![Rahul Pandey's user
avatar](https://lh4.googleusercontent.com/-ICZ4X1Lqwxo/AAAAAAAAAAI/AAAAAAAAAnk/nzGPG2s2SMs/photo.jpg?sz=64)
Rahul PandeyRahul Pandey
19133 silver badges66 bronze badges
Add a comment  | 
This answer is useful
1
Save this answer.
Show activity on this post.
If you are not willing to try regex (which you should), you can use this:
    s.replace('\n\n','\n')
Repeat this several times to make sure there is no blank line left. Or
chaining the commands:
    s.replace('\n\n','\n').replace('\n\n','\n')
Just to encourage you to use regex, here are two introductory videos that I
find intuitive:  
• Regular Expressions (Regex) Tutorial  
• Python Tutorial: re Module
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
edited Aug 23, 2019 at 13:27
answered Sep 1, 2015 at 17:54
![Ooker's user avatar](https://i.sstatic.net/3h515.jpg?s=64)
OokerOoker
2,89655 gold badges3737 silver badges7979 bronze badges
4
  * 2
You may want to use a regular expression, for example. "Repeat several lines
to be sure" is not a good idea when you are coding, as you may leave things
unsolved or waste time running something more times than needed.
– Enrico
Commented Jun 21, 2016 at 4:55
  * +1 to regex, but as a lazy hack (or if importing the regex module is too slow) you can chain replace statements: `s.replace('\n\n','\n').replace('\n\n','\n')` Tested on 3.6.
– evan_b
Commented Jun 16, 2017 at 5:28
  * @evan_b didn't think of chaining commands. Which one will be executed first?
– Ooker
Commented Jun 16, 2017 at 15:03
  * 1
Execution order appears to be left to right, but I wasn't able to find that
documented anywhere after searching briefly, so it may not be safe to rely on
that for order-sensitive replacements.
– evan_b
Commented Jun 17, 2017 at 22:53
Add a comment  | 
This answer is useful
0
Save this answer.
Show activity on this post.
I use this solution to delete empty lines and join everything together as one
line:
    match_p = re.sub(r'\s{2}', '', my_txt) # my_txt is text above
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
edited Jul 22, 2020 at 6:41
![Cody Gray's user avatar](https://i.sstatic.net/5sLgY.png?s=64)
Cody Gray♦
244k5252 gold badges501501 silver badges581581 bronze badges
answered Nov 22, 2018 at 13:26
![red fred's user
avatar](https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=64)
red fredred fred
911 bronze badge
Add a comment  | 
This answer is useful
0
Save this answer.
Show activity on this post.
Use positive lookbehind regex:
    re.sub(r'(?<=\n)\s+', '', s, re.MULTILINE)
When you input:
    foo
    <tab> <tab>
    bar
The output will be:
    foo
    bar
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
answered Jul 7, 2021 at 10:06
![Kxrr's user avatar](https://i.sstatic.net/VsOpm.png?s=64)
KxrrKxrr
52066 silver badges1414 bronze badges
1
  * This doesn't work on first line of the file :(
– Martin
Commented Jun 20, 2022 at 10:18
Add a comment  | 
This answer is useful
-1 
Save this answer.
Show activity on this post.
My version:
    while '' in all_lines:
        all_lines.pop(all_lines.index(''))
Share
Share a link to this answer
Copy linkCC BY-SA 3.0
Improve this answer
Follow
Follow this answer to receive notifications
answered Sep 10, 2015 at 12:49
![Radren's user
avatar](https://www.gravatar.com/avatar/dab4600c52b6c89a838a8825df3dc244?s=64&d=identicon&r=PG&f=y&so-
version=2)
RadrenRadren
30544 silver badges66 bronze badges
Add a comment  | 
This answer is useful
-1 
Save this answer.
Show activity on this post.
    str_whith_space = """
        example line 1
        example line 2
        example line 3
        example line 4"""
    new_str = '\n'.join(el.strip() for el in str_whith_space.split('\n') if el.strip())
    print(new_str)
Output:
    """ <br>
    example line 1 <br>
    example line 2 <br>
    example line 3 <br>
    example line 4 <br>
    """
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
edited Dec 16, 2021 at 22:34
![Patrick's user
avatar](https://lh4.googleusercontent.com/-j6qbfmi4pyA/AAAAAAAAAAI/AAAAAAAAAAA/AMZuuclVpVWUbzB54Ih7pt89N_3cMC0D6Q/s96-c/photo.jpg?sz=64)
Patrick
1,19155 gold badges1212 silver badges1919 bronze badges
answered Dec 16, 2021 at 5:53
![Павел Гоняев's user
avatar](https://lh5.googleusercontent.com/-kBqoLcCo2_w/AAAAAAAAAAI/AAAAAAAAGgQ/vimpLY5RhLo/photo.jpg?sz=64)
Павел ГоняевПавел Гоняев
2933 bronze badges
Add a comment  | 
This answer is useful
-1 
Save this answer.
Show activity on this post.
You can combine `map` and `strip` to remove spaces and use `filter(None,
iterable)` to remove empty elements:
    string = "a\n \n\nb"
    list_of_str = string.split("\n")
    list_of_str = filter(None, map(str.strip, list_of_str))
    list(list_of_str)
Returns: `['a', 'b']`
Share
Share a link to this answer
Copy linkCC BY-SA 4.0
Improve this answer
Follow
Follow this answer to receive notifications
answered Jul 19, 2023 at 12:11
![mathause's user
avatar](https://graph.facebook.com/100001943540718/picture?type=large)
mathausemathause
1,67311 gold badge1616 silver badges2626 bronze badges
Add a comment  | 
**Highly active question**. Earn 10 reputation (not counting the association
bonus) in order to answer this question. The reputation requirement helps
protect this question from spam and non-answer activity.
  * The Overflow Blog 
  * Legal advice from an AI is illegal
  * Featured on Meta 
  * The December 2024 Community Asks Sprint has been moved to March 2025 (and...
  * Stack Overflow Jobs is expanding to more countries
8 people chatting
Python
yesterday - Karl Knechtel
![](https://www.gravatar.com/avatar/6b767d0f7110b85046df4be3333d281f?s=23&d=identicon&r=PG)![](https://www.gravatar.com/avatar/5ffde821f0f9670e601b19f1731a6849?s=23&d=identicon&r=PG)![](https://i.sstatic.net/6VQlo.jpg?s=128&g&s=32)![](https://i.sstatic.net/hy0Bnl.png?s=128&g&s=32)![](https://www.gravatar.com/avatar/6cc1d82c11563b440c57280ad587ee47?s=23&d=identicon&r=PG)![](https://www.gravatar.com/avatar/bc66db28aa7c3fa8e4ce4238b696dee9?s=23&d=identicon&r=PG)![](https://www.gravatar.com/avatar/5b9c04999233026354268c2ee4237e04?s=23&d=identicon&r=PG)
#### Linked
1
python: how to delete blank lines?
92
What's a quick one-liner to remove empty lines from a python string?
2
python tesseract results giving unwanted extra line gaps between sentences
2
How to remove blank lines in text file python?
-1
How do I remove the empty line from this file?
1
How to use text in TextEdit and apply changes to it? Like my code see it and
say me what can I do in -btn_func- function?
0
Remove <br> from element being extracted
0
Remove all blank lines from a text file in python
#### Related
92
What's a quick one-liner to remove empty lines from a python string?
1
How to remove all whitespace and newlines?
2
How to remove blank lines in text file python?
1
How to remove specific empty lines from multi line strings in python?
3
How do I remove blank lines from a string in Python?
3
How do you remove the whitespace in a string with multiple lines python?
1
How to remove white space, line breaks etc from a string in python
0
How do I remove empty spaces and lines within a string?
1
Removing whitespace from multiple lines in a string in Python
0
Removing initial whitespace plus the last empty new line line using python
####  Hot Network Questions
  * A sad-looking tree with a secret 
  * Tikz: access a color defined in hex format out of list? 
  * Underlapping Eze 
  * Why is Young's modulus represented as a single value in DFT calculations? 
  * I was given a used road bike, should I be concerned about the age of the frame, and can I replace it and reuse the other parts? 
  * How to interpret being told that there are no current PhD openings but I should "keep in touch" for potential future opportunities? 
  * In a life-and-death emergency, could an airliner pull away from the gate? 
  * Finding corners where multiple polygons meet in QGIS 
  * PSE Advent Calendar 2024 (Day 18): A sweet & short expected chemistry Christmas puzzle 
  * Why are there no no-attribution licenses other than "public domain"? 
  * Flyback without using a controller IC 
  * Do accidentals have other meanings, or is their usage in this hymn all wrong? 
  * Why is the novel called David Copperfield? 
  * Sci-fi / futurism supplement from a UK newspaper in 1999/2000 
  * What can I do about a Schengen visa refusal from Greece that mentions a prior refusal from Sweden as the reason? 
  * Should I remove the ground plane under AC traces in my PCB? 
  * How to teach high school students to analyze diagrams in a proof? 
  * How to use `\let` with body-capturing inside `\NewDocumentEnvironment`? 
  * Why are straight-in approaches dangerous at uncontrolled airfields? 
  * Is "the book" mentioned in Daniel 12:1 the same as the Book of Life in Revelation? 
  * How to Mitigate Risks Before Delivering a Project with Limited Testing? 
  * Why is it considered terrorism to murder a CEO? 
  * Chain Rule different definitions 
  * Is it true that only prosecutors can 'cut a deal' with criminals? 
Question feed
#  Subscribe to RSS
Question feed
To subscribe to this RSS feed, copy and paste this URL into your RSS reader.
![](/posts/3711856/ivc/9074?prg=1422c92b-438f-49c9-9ed5-6dbe3f6ba9d4)
lang-py
##### Stack Overflow
  * Questions
  * Help
  * Chat
##### Products
  * Teams
  * Advertising
  * Talent
##### Company
  * About
  * Press
  * Work Here
  * Legal
  * Privacy Policy
  * Terms of Service
  * Contact Us
  * Cookie Settings
  * Cookie Policy
##### Stack Exchange Network
  * Technology 
  * Culture & recreation 
  * Life & arts 
  * Science 
  * Professional 
  * Business 
  * API 
  * Data 
  * Blog
  * Facebook
  * Twitter
  * LinkedIn
  * Instagram
Site design / logo © 2024 Stack Exchange Inc;  user contributions licensed
under  CC BY-SA .  rev 2024.12.18.20664